#!/usr/bin/env python3
"""
Script para testar se a aplica√ß√£o est√° agora conectando no PostgreSQL
"""

import os
import sys

def test_flask_database():
    """Testar configura√ß√£o do banco na aplica√ß√£o Flask"""
    
    print("üß™ Testando configura√ß√£o da aplica√ß√£o...")
    
    try:
        # Importar configura√ß√£o da aplica√ß√£o
        from app import create_app
        
        app = create_app()
        
        with app.app_context():
            database_url = app.config.get('SQLALCHEMY_DATABASE_URI')
            print(f"   üîó DATABASE_URI: {database_url}")
            
            if database_url and database_url.startswith('postgresql'):
                print("   ‚úÖ Aplica√ß√£o configurada para PostgreSQL!")
                
                # Testar conex√£o
                from app import db
                try:
                    # Tentar query simples
                    result = db.session.execute(db.text("SELECT 1")).fetchone()
                    print("   ‚úÖ Conex√£o PostgreSQL funcionando!")
                    
                    # Verificar se tabela auditoria existe
                    tables_result = db.session.execute(db.text("""
                        SELECT table_name 
                        FROM information_schema.tables 
                        WHERE table_schema = 'public' 
                        AND table_name = 'auditoria'
                    """)).fetchone()
                    
                    if tables_result:
                        print("   ‚úÖ Tabela 'auditoria' encontrada!")
                        return True
                    else:
                        print("   ‚ö†Ô∏è  Tabela 'auditoria' n√£o existe ainda")
                        print("   üìù Execute: python fix_auditoria_postgresql_manual.py")
                        return False
                        
                except Exception as e:
                    print(f"   ‚úó Erro na conex√£o: {e}")
                    return False
            else:
                print(f"   ‚ùå Aplica√ß√£o ainda usando SQLite: {database_url}")
                return False
                
    except Exception as e:
        print(f"   ‚úó Erro ao testar aplica√ß√£o: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("üß™ TESTE DE CONEX√ÉO COM BANCO")
    print("=" * 60)
    
    success = test_flask_database()
    
    print()
    print("=" * 60)
    if success:
        print("‚úÖ BANCO CONFIGURADO CORRETAMENTE")
    else:
        print("‚ùå AINDA H√Å PROBLEMAS NA CONFIGURA√á√ÉO")
    print("=" * 60)